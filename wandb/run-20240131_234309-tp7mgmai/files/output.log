I moved the objects to:
[2.10277564 4.80277564]
[3.90277564 3.60277564]
Gathering BC Training data . . .
I moved the objects to:
[2.40277564 3.30277564]
[3.30277564 4.50277564]
I moved the objects to:
[4.50277564 2.70277564]
[1.80277564 7.50277564]
I moved the objects to:
[3.60277564 5.70277564]
[3.90277564 6.60277564]
I moved the objects to:
[7.80277564 6.00277564]
[7.80277564 3.00277564]
I moved the objects to:
[2.40277564 5.70277564]
[3.60277564 4.20277564]
Gathered BC Training data.
Gathering BC Test data . . .
I moved the objects to:
[5.10277564 3.00277564]
[6.30277564 3.00277564]
I moved the objects to:
[7.80277564 4.50277564]
[5.70277564 6.90277564]
I moved the objects to:
[2.70277564 3.30277564]
[8.10277564 6.30277564]
I moved the objects to:
[3.60277564 5.40277564]
[3.60277564 2.10277564]
I moved the objects to:
[6.30277564 6.30277564]
[3.00277564 7.20277564]
I moved the objects to:
[4.50277564 2.10277564]
[4.50277564 5.10277564]
I moved the objects to:
[7.80277564 5.10277564]
[5.70277564 2.10277564]
I moved the objects to:
[5.10277564 3.90277564]
[7.50277564 3.60277564]
I moved the objects to:
[5.40277564 1.80277564]
[7.50277564 3.30277564]
I moved the objects to:
[7.20277564 5.70277564]
[6.30277564 3.30277564]
Gathered BC Test data.
Dataset size: 100 Test dataset size: 246
Beginning BC Training . . .
cuda:0
Traceback (most recent call last):
  File "C:\Users\tomda\Desktop\symmetry_learning\symmetry_shift_runner.py", line 52, in <module>
    main(config)
  File "C:\Users\tomda\Desktop\symmetry_learning\symmetry_shift_runner.py", line 37, in main
    bc_control(config)
  File "C:\Users\tomda\Desktop\symmetry_learning\symmetry_shift_runner.py", line 17, in bc_control
    bcRunner(env)
  File "C:\Users\tomda\Desktop\symmetry_learning\algos\bc.py", line 365, in bcRunner
    bc(env, model)
  File "C:\Users\tomda\Desktop\symmetry_learning\algos\bc.py", line 255, in bc
    loss += loss.detach().cpu().numpy()
  File "C:\Users\tomda\anaconda3\Lib\site-packages\torch\_tensor.py", line 1062, in __array__
    return self.numpy()
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.