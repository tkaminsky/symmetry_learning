I moved the objects to:
[4.00277564 4.50277564]
[4.20277564 7.90277564]
Gathering BC Training data . . .
I moved the objects to:
[7.80277564 5.80277564]
[7.60277564 5.30277564]
I moved the objects to:
[3.70277564 3.30277564]
[4.90277564 5.60277564]
I moved the objects to:
[3.90277564 2.20277564]
[3.50277564 4.50277564]
Using cache found in C:\Users\tomda/.cache\torch\hub\pytorch_vision_v0.9.0
C:\Users\tomda\anaconda3\Lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\Users\tomda\anaconda3\Lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
I moved the objects to:
[4.50277564 3.90277564]
[6.90277564 3.20277564]
I moved the objects to:
[5.40277564 4.00277564]
[8.10277564 4.10277564]
I moved the objects to:
[5.40277564 2.60277564]
[7.60277564 6.40277564]
I moved the objects to:
[3.50277564 4.40277564]
[4.00277564 4.90277564]
I moved the objects to:
[3.20277564 8.10277564]
[3.30277564 2.20277564]
I moved the objects to:
[3.70277564 2.10277564]
[7.80277564 7.60277564]
I moved the objects to:
[4.80277564 6.10277564]
[6.10277564 5.10277564]
I moved the objects to:
[3.50277564 4.40277564]
[2.70277564 1.80277564]
Traceback (most recent call last):
  File "C:\Users\tomda\Desktop\symmetry_learning\symmetry_shift_runner.py", line 52, in <module>
    main(config)
  File "C:\Users\tomda\Desktop\symmetry_learning\symmetry_shift_runner.py", line 37, in main
    bc_control(config)
  File "C:\Users\tomda\Desktop\symmetry_learning\symmetry_shift_runner.py", line 17, in bc_control
    bcRunner(env)
  File "C:\Users\tomda\Desktop\symmetry_learning\algos\bc.py", line 320, in bcRunner
    bc(env, model)
  File "C:\Users\tomda\Desktop\symmetry_learning\algos\bc.py", line 141, in bc
    trajectories = get_trajectories(env, model, num_trajectories=budget)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\tomda\Desktop\symmetry_learning\algos\bc.py", line 98, in get_trajectories
    state, _, done, _ = env.step(action)
                        ^^^^^^^^^^^^^^^^
  File "C:\Users\tomda\Desktop\symmetry_learning\environment\symmetry_move.py", line 241, in step
    obs = self.get_observation()
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\tomda\Desktop\symmetry_learning\environment\symmetry_move.py", line 83, in get_observation
    self._render()
  File "C:\Users\tomda\Desktop\symmetry_learning\environment\symmetry_move.py", line 147, in _render
    self.clock.tick(60)
KeyboardInterrupt